# -*- coding: utf-8 -*-
from pprint import pprint
import time
import datetime
from pykrx import stock

# tickers = ['087260','038070','018700','009730','049830','091970','057030','215790','141020','031860','058110','215380','018680','223310','078140','130500','043910','045660','058220','294630','007370','238120','066910','317320','033110','256150','161570','080720','274090','017650','065450','170030','079970','025870','046210','053290','305090','217330','225430','265560','127120','044960','041920','284620','016670','083500','024060','056000','106190','092600','226440','052190','217620','062970','131760','097800','032800','018620','050860','182690','257370','217820','051980','035200','041930','066130','317870','127710','150840','038160','205470','900260','039230','103840','900300','123410','053110','177350','037230','254120','065440','195500','086060','114120','224060','270520','196490','214680','033310','032680','063440','174880','234100','327260','012860','033340','203450','016920','027830','031310','115480','026040','033130','057880','060540','053450','215480','076610','124560','032750','192250','060480','139050','300080','114630','037030','900280','141070','263540','086670','054630','032960','220260','090410','070300','308100','089790','182360','900340','900270','058630','056700','082660','078650','224110','246720','171010','119830','039980','126870','081150','143540','046310','052860','054940','131220','900100','037330','096040','020180','208140','057540','318000','047920','059210','221610','230980','021040','042500','052900','036170','044480','052300','036180','042040','019540','106520','264660','099520','066430','090710','035460','039290','196450','219420','079810','054090','222810','036480','041020','049120','246690','131100','064510','050760','005860','217500','033230','104040','012340','049720','042510','297090','140670','148250','049630','033170','317530','178780','008470','043290','053260','122350','014190','072770','088130','051780','147760','075970','048910','096610','134060','101400','131090','250060','080470','263800','036010','215100','123570','023770','149980','033320','048470','036640','126600','024740','218150','069410','017250','048430','219550','054180','053660','041590','290270','096350','250000','071670','013810','277410','079950','065370','058530','053050','039610','063170','208860','038460','170920','010280','037760','053270','051490','031510','094970','023460','019010','006580','080520','252500','050120','054040','033560','036090','219130','054300','119850','171090','009620','311390','052220','105740','122310','079650','072990','040160','147830','272110','214310','160600','078860','285490','269620','114570','046120','117730','099410','093640','142210','204020','054920','052600','069140','046970','092300','019990','208710','101390','100660','042110','114810','267320','001810','158310','222980','054540','073540','067010','189860','286750','126640','052460','104200','054930','025880','049080','021650','087730','263020','006920','099440','109080','059120','001000','039310','105550','005670','322180','065570','217190','095910','093380','066410','072950','053700','127160','016790','227950','037370','153460','060260','227100','024950','258790','078350','043090','094850','177830','050090','000440','036000','017510','275630','002290','089150','032080','024880','053160','047080','019570','025550','313760','064090','187790','263810','073190','038620','317850','092870','091440','068050','045340','094820','187220','044060','041520','096690','204840','154030','190650','094860','032980','181340','317830','019660','047560','228340','018000','293580','290660','039420','046110','140070','046390','281740','131180','066360','030350','063760','098120','003310','114190','215090','066670','234920','084730','279600','196700','049550','220100','027580','040610','297570','219750','089530','027040','153490','082850','024840','065500','123010','208350','263920','323280','093520','226350','039010','042940','085670','002230','080580','089850','058450','195440','237750','032685','037400','004780','097870','104620','234300','050540','208370','049430','186230','038870','019770','170790','196300','044780','007770','032860','068940','095500','037350','241520','173130','032940','017000','121890','057680','100030','115570','065770','065350','222420','184230','208640','258830','101170','253590','197140','011560','119500','066900','221980','154040','067770','136510','206400','087600','033540','032280','128660','010240','036710','041440','024800','026910','221840','025950','148140','075130','021880','123840','307180','029480','048770','053060','054410','038530','255220','222110','150900','010470','094840','045510','227610','033430','017480','212560','128540','323230','900080','225590','113810','036690','037440','263860','291230','189980','039740','038110','159910','123330','090150','023440','048830','277070','032580','900120','007530','246960','013720','189690','014940','038010','008370','071850','073640','101730','076080','092460','083650','204630','085810','115500','067730','024910','053620','276920','121850','264850','020400','096640','039240','140520','056090','036620','205500','011080','043360','024940','192390','084180','191410','062860','051390','226400','342550','045300','049470','024120','279410','101670','039020','101000','023790','339950','064480','073010','317770','187270','109860','081580','220180','002680','043710','065690','009780','340440','098660','115610','096870','138070','079170','021045','088390','012620','134580','130740','310200','038950','004590','043260','050960','060380','070590','008830','321260','024850','059100','067920','341160','317030','322780','110020','307160','306620','323210','323940','115310','101930','105330','336060','006140','085910','080010','032540','319400','103230','042600','079000','028080','330990','213090','033200','333050','329560','331380','122690','900070','344050','175140','340360','328380','332290','277480','340120','281410','331520','307280','335870','335890','08537M','336570','309930','307870','291210','311270','310870','307070','287410','299170','313750']


konex = [
    "341310",
    "179530",
    "336040",
    "331660",
    "337840",
    "093510",
    "327970",
    "329050",
    "309900",
    "317860",
    "323350",
    "311840",
    "314130",
    "308700",
    "311060",
    "303360",
    "271780",
    "279060",
    "302920",
    "276240",
    "299480",
    "299670",
    "163430",
    "288490",
    "285770",
    "281310",
    "236030",
    "284420",
    "277880",
    "278990",
    "270020",
    "267060",
    "270660",
    "270210",
    "271850",
    "224880",
    "266170",
    "267810",
    "266870",
    "225860",
    "284610",
    "278380",
    "242350",
    "258250",
    "258540",
    "232830",
    "243870",
    "251280",
    "251960",
    "239890",
    "191600",
    "246250",
    "245450",
    "208850",
    "224020",
    "244880",
    "112190",
    "241510",
    "238500",
    "217910",
    "212310",
    "222160",
    "250030",
    "240340",
    "327610",
    "236340",
    "232530",
    "215570",
    "233990",
    "232680",
    "211050",
    "227420",
    "229500",
    "228180",
    "229000",
    "224760",
    "223220",
    "233250",
    "238170",
    "252370",
    "149300",
    "221800",
    "217880",
    "258050",
    "222670",
    "220110",
    "225220",
    "215050",
    "217950",
    "205290",
    "208890",
    "214610",
    "140610",
    "200580",
    "203400",
    "206950",
    "200350",
    "217320",
    "178600",
    "189330",
    "189540",
    "189350",
    "183350",
    "150440",
    "179720",
    "086080",
    "260870",
    "158300",
    "180060",
    "140290",
    "120780",
    "210120",
    "084440",
    "121060",
    "140660",
    "216280",
    "058970",
    "207490",
    "234070",
    "260970",
    "224810",
    "149010",
    "185190",
    "126340",
    "199290",
    "225850",
    "162120",
    "176750",
    "183410",
    "199150",
    "135160",
    "076340",
    "107640",
    "136660",
    "220250",
    "103660",
    "114920",
    "216400",
    "116100",
    "101360",
    "202960",
    "199800",
    "066830",
    "148780",
    "092590",
    "064850",
    "044990",
    "086460",
    "067370",
    "086220",
]
tickers = list(set(stock.get_market_ticker_list()) - set(konex))


def get_time(temp):
    now = temp
    YYYY = str(now.year)
    MM = str(now.month)
    DD = str(now.day)
    hh = str(now.hour)
    mm = str(now.minute)

    if len(MM) != 2:
        MM = "0" + MM
    if len(DD) != 2:
        DD = "0" + DD
    if len(hh) != 2:
        hh = "0" + hh
    if len(mm) != 2:
        mm = "0" + mm

    return YYYY + MM + DD, hh + mm


ban_list = []


while True:
    Start = get_time(datetime.datetime.now() - datetime.timedelta(days=15))[0]
    End, what_time_is_it_now = get_time(datetime.datetime.now())
    print(what_time_is_it_now)
    if what_time_is_it_now == "1030":
        break

    for i, ticker in enumerate(tickers):
        try:
            df = stock.get_market_ohlcv_by_date(Start, End, ticker).tail(2)
            D_1 = df.iloc[0]
            D_day = df.iloc[1]
            PP = (D_1["고가"] + D_1["저가"] + 2 * D_1["종가"]) / 4
            R1 = 2 * PP - D_1["저가"]
            R2 = PP + D_1["고가"] - D_1["저가"]
            R3 = D_1["고가"] + 2 * (PP - D_1["저가"])

            if D_day["종가"] > R3:
                ban_list.append(ticker)
                name = stock.get_market_ticker_name(ticker)
                gap = round((-1 + df.iloc[1]["시가"] / df.iloc[0]["종가"]) * 100)

                if gap < 2.9:
                    continue
                if gap > 11:
                    continue
                if R3 < D_day["시가"]:
                    continue

                print(name)
                print("종가:", D_day["종가"])
                print("R3:", R3)
                print("시가:", D_day["시가"])
                print("시가갭:", gap, "%")
                print("")

                continue
            """
			elif D_day['종가'] > R1:
				ban_list.append(ticker)
				name = stock.get_market_ticker_name(ticker)
				gap =round((-1 + df.iloc[1]['시가']/df.iloc[0]['종가']) * 100)
				
				print(name)
				print('R1', '시가갭:',gap,'%')
				print('')

				continue
			"""

        except:
            time.sleep(2)
            ban_list.append(ticker)
            # print('')
            print("", end="", flush=True)

    tickers = list(set(tickers) - set(ban_list))
