# -*- coding: utf-8 -*-
import ccxt
import time
import datetime
import urllib.request
import json
import pandas as pd
import numpy as np
import pandas_ta


# ccxt ex.fetch_ohlcv() 보다 훨씬 빠르게 ohlcv 얻기
def get_ohlcv(ticker="BTC/USDT", interval="1m", limit=200):
    try:
        temp = ticker.split("/")
        ticker = f"{temp[0]}{temp[1]}"
        # url = f'https://fapi.binance.com/fapi/v1/klines?symbol={ticker}&interval={interval}&limit={str(limit)}' # monitoring
        url = f"https://api.binance.com/api/v3/klines?symbol={ticker}&interval={interval}&limit={str(limit)}"
        text_data = urllib.request.urlopen(url).read().decode("utf-8")
        output = json.loads(text_data)
    except Exception as e:
        # print(e, '\n', 'ccxt.base.errors.BadSymbol: binance does not have market symbol {0}'.format(ticker))
        return None
    output = [list(map(float, output[i])) for i in range(len(output))]
    return output


def get_time():
    now = datetime.datetime.now()
    YYYY = str(now.year)
    MM = str(now.month)
    DD = str(now.day)
    hh = str(now.hour)
    mm = str(now.minute)

    if len(MM) != 2:
        MM = "0" + MM
    if len(DD) != 2:
        DD = "0" + DD
    if len(hh) != 2:
        hh = "0" + hh
    if len(mm) != 2:
        mm = "0" + mm

    return YYYY + MM + DD, hh + mm


binance = ccxt.binance(
    {
        "options": {"defaultType": "future"},
        "timeout": 30000,
        "apiKey": "f6LEy0POPdaukqwlrnC4KvJbGWkcXRfVmKbsPmFAaPlyL2Rytswf7ilTa3kAjnQh",
        "secret": "sLvrd7ZT6c49yZVlnFRhPvJcIg8z39S6dVwZcIfPhFueA5BAy5UpTT3ZbVZg9zA2",
        "enableRateLimit": False,
    }
)
binance.load_markets()

# ticker_list = ['BAKE/USDT', 'NKN/USDT', 'XEM/USDT', 'LRC/USDT', 'ZEC/USDT', 'LINA/USDT', 'YFI/USDT', 'RVN/USDT', 'QTUM/USDT', 'SXP/USDT', 'CVC/USDT', 'CHZ/USDT', 'REEF/USDT', 'FIL/USDT', 'MTL/USDT', 'XRP/USDT', 'MATIC/USDT', 'COTI/USDT', 'NEO/USDT', 'ALGO/USDT', 'HBAR/USDT', 'BAT/USDT', 'REN/USDT', 'ADA/USDT', 'AVAX/USDT', 'HOT/USDT', 'TRX/USDT', 'AXS/USDT', 'AKRO/USDT', 'SC/USDT', 'ALPHA/USDT', 'KNC/USDT', 'CHR/USDT', 'AUDIO/USDT', 'XTZ/USDT', 'KSM/USDT', 'BTS/USDT', 'HNT/USDT', 'DASH/USDT', 'ICP/USDT', 'DGB/USDT', 'DOGE/USDT', 'VET/USDT', 'AAVE/USDT', 'IOTX/USDT', 'SRM/USDT', 'ONE/USDT', 'RLC/USDT', 'NEAR/USDT', 'GTC/USDT', 'STORJ/USDT', 'EGLD/USDT', 'WAVES/USDT', 'ETH/USDT', '1INCH/USDT', 'EOS/USDT', 'LUNA/USDT', 'UNFI/USDT', 'SUSHI/USDT', 'RSR/USDT', 'OMG/USDT', 'IOTA/USDT', 'DODO/USDT', 'CRV/USDT', 'ICX/USDT', 'ALICE/USDT', 'OGN/USDT', 'RAY/USDT', 'BCH/USDT', 'FTM/USDT', 'BLZ/USDT', 'BNB/USDT', 'KAVA/USDT', 'SKL/USDT', 'SOL/USDT', 'OCEAN/USDT', 'BTC/USDT', 'BTCDOM/USDT', 'LINK/USDT', 'SAND/USDT', 'ZRX/USDT', 'C98/USDT', 'XLM/USDT', 'ANKR/USDT', 'MANA/USDT', 'TRB/USDT', 'BTT/USDT', 'THETA/USDT', 'UNI/USDT', 'STMX/USDT', 'KEEP/USDT', 'IOST/USDT', 'BAND/USDT', 'ETC/USDT', 'ZIL/USDT', 'ENJ/USDT', 'LTC/USDT', 'BZRX/USDT', 'RUNE/USDT', 'CTK/USDT', 'LIT/USDT', 'SFP/USDT', 'ATOM/USDT', 'ZEN/USDT', 'TOMO/USDT', 'YFII/USDT', 'DEFI/USDT', 'FLM/USDT', 'BEL/USDT', 'COMP/USDT', 'ONT/USDT', '1000SHIB/USDT', 'TLM/USDT', 'DOT/USDT', 'GRT/USDT', 'XMR/USDT', 'MKR/USDT', 'CELR/USDT', 'BAL/USDT', 'DENT/USDT', 'SNX/USDT']
a = [
    "FIL/BNB",
    "SWRV/BNB",
    "UNI/BNB",
    "CHR/BNB",
    "LTC/BNB",
    "SUSHI/BNB",
    "VET/BNB",
    "EOS/BNB",
    "DOT/BNB",
    "SOL/BNB",
    "XRP/BNB",
    "ADA/BNB",
    "CHZ/BNB",
    "FTT/BNB",
    "LUNA/BNB",
    "CAKE/BNB",
    "BAKE/BNB",
    "SPARTA/BNB",
    "IOTA/BNB",
    "MATIC/BNB",
    "AAVE/BNB",
    "BCH/BNB",
    "ENJ/BNB",
    "INJ/BNB",
    "THETA/BNB",
    "TRX/BNB",
    "HARD/BNB",
    "ATA/BNB",
    "NEO/BNB",
    "ATOM/BNB",
    "ETC/BNB",
    "SAND/BNB",
    "CTSI/BNB",
    "ICP/BNB",
    "XLM/BNB",
    "COS/BNB",
    "BTT/BNB",
    "ANT/BNB",
    "FTM/BNB",
    "ZIL/BNB",
    "OGN/BNB",
    "ANKR/BNB",
    "MBL/BNB",
    "ALGO/BNB",
    "KSM/BNB",
    "XVS/BNB",
    "C98/BNB",
    "SXP/BNB",
    "DGB/BNB",
    "EGLD/BNB",
    "AXS/BNB",
    "ONE/BNB",
    "BAT/BNB",
    "WABI/BNB",
    "ICX/BNB",
    "WAVES/BNB",
    "BLZ/BNB",
]
b = [
    "ETH/BTC",
    "ETC/BTC",
    "BNB/BTC",
    "SOL/BTC",
    "ADA/BTC",
    "LINK/BTC",
    "DOT/BTC",
    "UNI/BTC",
    "THETA/BTC",
    "LIT/BTC",
    "LUNA/BTC",
    "AVAX/BTC",
    "ONT/BTC",
    "LTC/BTC",
    "RUNE/BTC",
    "XRP/BTC",
    "GRT/BTC",
    "BAT/BTC",
    "1INCH/BTC",
    "WTC/BTC",
    "MATIC/BTC",
    "SKY/BTC",
    "ENJ/BTC",
    "BCD/BTC",
    "ADX/BTC",
    "XMR/BTC",
    "OCEAN/BTC",
    "ICX/BTC",
    "ALGO/BTC",
    "GAS/BTC",
    "SUSHI/BTC",
    "AUDIO/BTC",
    "CRV/BTC",
    "ATOM/BTC",
    "FIL/BTC",
    "WAVES/BTC",
    "EVX/BTC",
    "SXP/BTC",
    "REN/BTC",
    "HIVE/BTC",
    "TFUEL/BTC",
    "BAND/BTC",
    "RLC/BTC",
    "KAVA/BTC",
    "SNX/BTC",
    "TOMO/BTC",
    "ALPHA/BTC",
    "CAKE/BTC",
    "KNC/BTC",
    "OXT/BTC",
    "FTT/BTC",
    "OGN/BTC",
    "IOTA/BTC",
    "XLM/BTC",
    "LSK/BTC",
    "CHZ/BTC",
    "ZRX/BTC",
    "SRM/BTC",
    "SAND/BTC",
    "DASH/BTC",
    "MANA/BTC",
    "POLY/BTC",
    "LRC/BTC",
    "GXS/BTC",
    "NEAR/BTC",
    "AXS/BTC",
    "FTM/BTC",
    "QTUM/BTC",
    "CTK/BTC",
    "MTL/BTC",
    "DOGE/BTC",
    "NAV/BTC",
    "CTSI/BTC",
    "ICP/BTC",
    "GVT/BTC",
    "ALICE/BTC",
    "VIDT/BTC",
    "OMG/BTC",
    "CELO/BTC",
    "POWR/BTC",
    "EOS/BTC",
    "BAR/BTC",
    "PNT/BTC",
    "KMD/BTC",
    "SUSD/BTC",
    "BNT/BTC",
    "WING/BTC",
    "POLS/BTC",
    "TLM/BTC",
    "NEO/BTC",
    "FET/BTC",
    "XEM/BTC",
    "WABI/BTC",
    "PERP/BTC",
    "TKO/BTC",
    "STORJ/BTC",
    "ONG/BTC",
    "PHA/BTC",
    "C98/BTC",
    "MDX/BTC",
    "XTZ/BTC",
    "CVC/BTC",
    "INJ/BTC",
    "DREP/BTC",
    "GTC/BTC",
    "NANO/BTC",
    "ASR/BTC",
    "REP/BTC",
    "FIS/BTC",
    "CHR/BTC",
    "HNT/BTC",
    "AST/BTC",
    "SCRT/BTC",
    "OM/BTC",
    "COTI/BTC",
    "TVK/BTC",
    "NULS/BTC",
    "WRX/BTC",
    "ANT/BTC",
    "UMA/BTC",
    "JUV/BTC",
    "FIRO/BTC",
    "LTO/BTC",
    "AION/BTC",
]
c = [
    "BTC/USDT",
    "ETH/USDT",
    "MATIC/USDT",
    "BCH/USDT",
    "BNB/USDT",
    "XMR/USDT",
    "DOT/USDT",
    "ADA/USDT",
    "AUD/USDT",
    "EUR/USDT",
    "TFUEL/USDT",
    "BUSD/USDT",
    "PAX/USDT",
    "TUSD/USDT",
    "USDC/USDT",
    "OMG/USDT",
    "EOS/USDT",
    "COCOS/USDT",
    "GBP/USDT",
    "DOGE/USDT",
    "ROSE/USDT",
    "XRP/USDT",
    "RVN/USDT",
    "TRX/USDT",
    "THETA/USDT",
    "PAXG/USDT",
    "XLM/USDT",
    "ZEC/USDT",
    "FIL/USDT",
    "LTC/USDT",
    "ICP/USDT",
    "VET/USDT",
    "AVAX/USDT",
    "LTO/USDT",
    "LINK/USDT",
    "REEF/USDT",
    "ETC/USDT",
    "NEO/USDT",
    "BTCUP/USDT",
    "CVC/USDT",
    "COMP/USDT",
    "SLP/USDT",
    "BTT/USDT",
    "DASH/USDT",
    "BAT/USDT",
    "AAVE/USDT",
    "BEL/USDT",
    "LINKUP/USDT",
    "CAKE/USDT",
    "UNI/USDT",
    "ATOM/USDT",
    "ONT/USDT",
    "OCEAN/USDT",
    "ALGO/USDT",
    "CHZ/USDT",
    "COTI/USDT",
    "BZRX/USDT",
    "DENT/USDT",
    "TKO/USDT",
    "ANKR/USDT",
    "GRT/USDT",
    "ZIL/USDT",
    "SAND/USDT",
    "SNX/USDT",
    "AXS/USDT",
    "DEGO/USDT",
    "IOST/USDT",
    "FIO/USDT",
    "YFI/USDT",
    "SXP/USDT",
    "SC/USDT",
    "XTZ/USDT",
    "SOL/USDT",
    "ALICE/USDT",
    "TLM/USDT",
    "XEM/USDT",
    "NEAR/USDT",
    "GTO/USDT",
    "FTM/USDT",
    "STMX/USDT",
    "BAKE/USDT",
    "FTT/USDT",
    "GXS/USDT",
    "WAVES/USDT",
    "HNT/USDT",
    "C98/USDT",
    "LUNA/USDT",
    "MANA/USDT",
    "KSM/USDT",
    "EGLD/USDT",
    "BLZ/USDT",
    "KNC/USDT",
    "SUSHI/USDT",
    "ENJ/USDT",
    "CELR/USDT",
    "BTCDOWN/USDT",
    "1INCH/USDT",
    "STORJ/USDT",
    "CTK/USDT",
    "SRM/USDT",
    "QTUM/USDT",
    "RUNE/USDT",
    "INJ/USDT",
    "REN/USDT",
    "UMA/USDT",
    "VTHO/USDT",
    "AUDIO/USDT",
    "HOT/USDT",
    "WIN/USDT",
    "NANO/USDT",
    "PUNDIX/USDT",
    "OGN/USDT",
    "CELO/USDT",
    "IOTA/USDT",
    "ETHDOWN/USDT",
    "YFII/USDT",
    "DUSK/USDT",
    "MKR/USDT",
    "DGB/USDT",
    "SUSHIUP/USDT",
    "ZRX/USDT",
    "CHR/USDT",
    "TOMO/USDT",
    "XVG/USDT",
    "PERP/USDT",
    "MITH/USDT",
]
d = [
    "XRP/ETH",
    "BNB/ETH",
    "ETC/ETH",
    "NEO/ETH",
    "LTC/ETH",
    "QLC/ETH",
    "ADX/ETH",
    "XLM/ETH",
    "ADA/ETH",
    "EOS/ETH",
    "GRT/ETH",
    "VET/ETH",
    "THETA/ETH",
    "ZIL/ETH",
    "TRX/ETH",
    "NANO/ETH",
    "REP/ETH",
    "OMG/ETH",
    "LINK/ETH",
    "IOST/ETH",
    "SCRT/ETH",
    "BLZ/ETH",
    "QTUM/ETH",
    "PIVX/ETH",
    "ZRX/ETH",
    "MTL/ETH",
    "BAT/ETH",
    "SNT/ETH",
    "ENJ/ETH",
    "MANA/ETH",
    "WAVES/ETH",
    "EZ/ETH",
    "XVG/ETH",
    "KMD/ETH",
    "ONT/ETH",
    "KEY/ETH",
    "SLP/ETH",
    "VIB/ETH",
    "RLC/ETH",
    "IOTX/ETH",
]


ticker_list = [
    "BAKE/USDT",
    "NKN/USDT",
    "XEM/USDT",
    "LRC/USDT",
    "ZEC/USDT",
    "LINA/USDT",
    "YFI/USDT",
    "RVN/USDT",
    "QTUM/USDT",
    "SXP/USDT",
    "CVC/USDT",
    "CHZ/USDT",
    "REEF/USDT",
    "FIL/USDT",
    "MTL/USDT",
    "XRP/USDT",
    "MATIC/USDT",
    "COTI/USDT",
    "NEO/USDT",
    "ALGO/USDT",
    "HBAR/USDT",
    "BAT/USDT",
    "REN/USDT",
    "ADA/USDT",
    "AVAX/USDT",
    "HOT/USDT",
    "TRX/USDT",
    "AXS/USDT",
    "AKRO/USDT",
    "SC/USDT",
    "ALPHA/USDT",
    "KNC/USDT",
    "CHR/USDT",
    "AUDIO/USDT",
    "XTZ/USDT",
    "KSM/USDT",
    "BTS/USDT",
    "HNT/USDT",
    "DASH/USDT",
    "ICP/USDT",
    "DGB/USDT",
    "DOGE/USDT",
    "VET/USDT",
    "AAVE/USDT",
    "IOTX/USDT",
    "SRM/USDT",
    "ONE/USDT",
    "RLC/USDT",
    "NEAR/USDT",
    "GTC/USDT",
    "STORJ/USDT",
    "EGLD/USDT",
    "WAVES/USDT",
    "ETH/USDT",
    "1INCH/USDT",
    "EOS/USDT",
    "LUNA/USDT",
    "UNFI/USDT",
    "SUSHI/USDT",
    "RSR/USDT",
    "OMG/USDT",
    "IOTA/USDT",
    "DODO/USDT",
    "CRV/USDT",
    "ICX/USDT",
    "ALICE/USDT",
    "OGN/USDT",
    "RAY/USDT",
    "BCH/USDT",
    "FTM/USDT",
    "BLZ/USDT",
    "BNB/USDT",
    "KAVA/USDT",
    "SKL/USDT",
    "SOL/USDT",
    "OCEAN/USDT",
    "BTC/USDT",
    "LINK/USDT",
    "SAND/USDT",
    "ZRX/USDT",
    "C98/USDT",
    "XLM/USDT",
    "ANKR/USDT",
    "MANA/USDT",
    "TRB/USDT",
    "BTT/USDT",
    "THETA/USDT",
    "UNI/USDT",
    "STMX/USDT",
    "KEEP/USDT",
    "IOST/USDT",
    "BAND/USDT",
    "ETC/USDT",
    "ZIL/USDT",
    "ENJ/USDT",
    "LTC/USDT",
    "BZRX/USDT",
    "RUNE/USDT",
    "CTK/USDT",
    "LIT/USDT",
    "SFP/USDT",
    "ATOM/USDT",
    "ZEN/USDT",
    "TOMO/USDT",
    "YFII/USDT",
    "FLM/USDT",
    "BEL/USDT",
    "COMP/USDT",
    "ONT/USDT",
    "TLM/USDT",
    "DOT/USDT",
    "GRT/USDT",
    "XMR/USDT",
    "MKR/USDT",
    "CELR/USDT",
    "BAL/USDT",
    "DENT/USDT",
    "SNX/USDT",
]
ticker_list = ticker_list + a + b + d


# ticker_list = ['BAKE/USDT', 'NKN/USDT', 'XEM/USDT', 'LRC/USDT', 'ZEC/USDT', 'LINA/USDT', 'YFI/USDT', 'RVN/USDT', 'QTUM/USDT', 'SXP/USDT', 'CVC/USDT', 'CHZ/USDT', 'REEF/USDT', 'FIL/USDT', 'MTL/USDT', 'XRP/USDT', 'MATIC/USDT', 'COTI/USDT', 'NEO/USDT', 'ALGO/USDT', 'HBAR/USDT', 'BAT/USDT', 'REN/USDT', 'ADA/USDT', 'AVAX/USDT', 'HOT/USDT', 'TRX/USDT', 'AXS/USDT', 'AKRO/USDT', 'SC/USDT', 'ALPHA/USDT', 'KNC/USDT', 'CHR/USDT', 'AUDIO/USDT', 'XTZ/USDT', 'KSM/USDT', 'BTS/USDT', 'HNT/USDT', 'DASH/USDT', 'ICP/USDT', 'DGB/USDT', 'DOGE/USDT', 'VET/USDT', 'AAVE/USDT', 'IOTX/USDT', 'SRM/USDT', 'ONE/USDT', 'RLC/USDT', 'NEAR/USDT', 'GTC/USDT', 'STORJ/USDT', 'EGLD/USDT', 'WAVES/USDT', 'ETH/USDT', '1INCH/USDT', 'EOS/USDT', 'LUNA/USDT', 'UNFI/USDT', 'SUSHI/USDT', 'RSR/USDT', 'OMG/USDT', 'IOTA/USDT', 'DODO/USDT', 'CRV/USDT', 'ICX/USDT', 'ALICE/USDT', 'OGN/USDT', 'RAY/USDT', 'BCH/USDT', 'FTM/USDT', 'BLZ/USDT', 'BNB/USDT', 'KAVA/USDT', 'SKL/USDT', 'SOL/USDT', 'OCEAN/USDT', 'BTC/USDT', 'LINK/USDT', 'SAND/USDT', 'ZRX/USDT', 'C98/USDT', 'XLM/USDT', 'ANKR/USDT', 'MANA/USDT', 'TRB/USDT', 'BTT/USDT', 'THETA/USDT', 'UNI/USDT', 'STMX/USDT', 'KEEP/USDT', 'IOST/USDT', 'BAND/USDT', 'ETC/USDT', 'ZIL/USDT', 'ENJ/USDT', 'LTC/USDT', 'BZRX/USDT', 'RUNE/USDT', 'CTK/USDT', 'LIT/USDT', 'SFP/USDT', 'ATOM/USDT', 'ZEN/USDT', 'TOMO/USDT', 'YFII/USDT', 'FLM/USDT', 'BEL/USDT', 'COMP/USDT', 'ONT/USDT', 'TLM/USDT', 'DOT/USDT', 'GRT/USDT', 'XMR/USDT', 'MKR/USDT', 'CELR/USDT', 'BAL/USDT', 'DENT/USDT', 'SNX/USDT']
for i, item in enumerate(ticker_list):
    try:
        time.sleep(0.2)
        ohlcv = get_ohlcv(item, "1h", 400)
        if i == 0:
            print(len(ohlcv))
        df = pd.DataFrame(
            data=np.array(ohlcv),
            columns=["T", "O", "H", "L", "close", "V", "0", "0", "0", "0", "0", "0"],
        )
        EMA_7 = df.ta.ema(length=7).tolist()[-2]
        EMA_25 = df.ta.ema(length=25).tolist()[-2]
        EMA_99 = df.ta.ema(length=99).tolist()[-2]
        if EMA_7 < EMA_25 and EMA_7 < EMA_99 and EMA_25 < EMA_99:
            open_ = ohlcv[-2][1]
            high_ = ohlcv[-2][2]
            low_ = ohlcv[-2][3]
            close_ = ohlcv[-2][4]
            if high_ - low_ == 0:
                continue
            IBS = (close_ - low_) / (high_ - low_)
            if IBS < 0.08:
                print(f"{IBS}   {item}   {datetime.datetime.now()}")
        else:
            continue
    except:
        time.sleep(0.5)
        print(f"!error! {item}")
