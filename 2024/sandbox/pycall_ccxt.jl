using Dates
include("./../../2022/julia_test/utils.jl")
using PyCall


function get_tickers_bybit()
    return ["TRX/USDT:USDT", "BAKE/USDT:USDT", "SOL/USDT:USDT", "SPELL/USDT:USDT", "RAD/USDT:USDT", "SSV/USDT:USDT", "AR/USDT:USDT", "ARB/USDT:USDT", "LRC/USDT:USDT", "DOGE/USDT:USDT", "NEO/USDT:USDT", "GALA/USDT:USDT", "SUI/USDT:USDT", "MANA/USDT:USDT", "LTC/USDT:USDT", "LEVER/USDT:USDT", "BLUR/USDT:USDT", "COMP/USDT:USDT", "VET/USDT:USDT", "LUNA2/USDT:USDT", "CTK/USDT:USDT", "MASK/USDT:USDT", "PEOPLE/USDT:USDT", "TRU/USDT:USDT", "DAR/USDT:USDT", "C98/USDT:USDT", "ENS/USDT:USDT", "AAVE/USDT:USDT", "COMBO/USDT:USDT", "CKB/USDT:USDT", "KSM/USDT:USDT", "ALPHA/USDT:USDT", "CRV/USDT:USDT", "LDO/USDT:USDT", "SKL/USDT:USDT", "HFT/USDT:USDT", "OP/USDT:USDT", "DGB/USDT:USDT", "QNT/USDT:USDT", "ADA/USDT:USDT", "HOT/USDT:USDT", "IOST/USDT:USDT", "IOTX/USDT:USDT", "CTSI/USDT:USDT", "ACH/USDT:USDT", "UMA/USDT:USDT", "MATIC/USDT:USDT", "PERP/USDT:USDT", "THETA/USDT:USDT", "STORJ/USDT:USDT", "SAND/USDT:USDT", "JOE/USDT:USDT", "HBAR/USDT:USDT", "BNB/USDT:USDT", "INJ/USDT:USDT", "ZRX/USDT:USDT", "DASH/USDT:USDT", "REEF/USDT:USDT", "GAL/USDT:USDT", "AMB/USDT:USDT", "FET/USDT:USDT", "FLOW/USDT:USDT", "WAVES/USDT:USDT", "RVN/USDT:USDT", "CFX/USDT:USDT", "SXP/USDT:USDT", "EGLD/USDT:USDT", "API3/USDT:USDT", "ROSE/USDT:USDT", "EOS/USDT:USDT", "XTZ/USDT:USDT", "AVAX/USDT:USDT", "ICP/USDT:USDT", "SNX/USDT:USDT", "REN/USDT:USDT", "XLM/USDT:USDT", "1000PEPE/USDT:USDT", "FTM/USDT:USDT", "WOO/USDT:USDT", "KAVA/USDT:USDT", "ZEN/USDT:USDT", "AUDIO/USDT:USDT", "ID/USDT:USDT", "ONE/USDT:USDT", "OGN/USDT:USDT", "ARPA/USDT:USDT", "RDNT/USDT:USDT", "BCH/USDT:USDT", "CHZ/USDT:USDT", "MKR/USDT:USDT", "KLAY/USDT:USDT", "KEY/USDT:USDT", "UNI/USDT:USDT", "HOOK/USDT:USDT", "CELO/USDT:USDT", "ETC/USDT:USDT", "STG/USDT:USDT", "LINA/USDT:USDT", "ONT/USDT:USDT", "ATOM/USDT:USDT", "ASTR/USDT:USDT", "BAT/USDT:USDT", "QTUM/USDT:USDT", "SFP/USDT:USDT", "ATA/USDT:USDT", "MINA/USDT:USDT", "SUSHI/USDT:USDT", "RUNE/USDT:USDT", "RSR/USDT:USDT", "ZEC/USDT:USDT", "TLM/USDT:USDT", "RLC/USDT:USDT", "FXS/USDT:USDT", "APT/USDT:USDT", "ANT/USDT:USDT", "BLZ/USDT:USDT", "DENT/USDT:USDT", "XEM/USDT:USDT", "BAL/USDT:USDT", "MTL/USDT:USDT", "HIGH/USDT:USDT", "DUSK/USDT:USDT", "JASMY/USDT:USDT", "GTC/USDT:USDT", "XVS/USDT:USDT", "ANKR/USDT:USDT", "PHB/USDT:USDT", "COTI/USDT:USDT", "XMR/USDT:USDT", "DOT/USDT:USDT", "KNC/USDT:USDT", "OMG/USDT:USDT", "GMT/USDT:USDT", "UNFI/USDT:USDT", "AGIX/USDT:USDT", "TRB/USDT:USDT", "GRT/USDT:USDT", "BEL/USDT:USDT", "ENJ/USDT:USDT", "AXS/USDT:USDT", "FIL/USDT:USDT", "ALGO/USDT:USDT", "DYDX/USDT:USDT", "CVX/USDT:USDT", "LPT/USDT:USDT", "STX/USDT:USDT", "T/USDT:USDT", "RNDR/USDT:USDT", "APE/USDT:USDT", "IDEX/USDT:USDT", "BAND/USDT:USDT", "1000XEC/USDT:USDT", "IMX/USDT:USDT", "LQTY/USDT:USDT", "LINK/USDT:USDT", "1000FLOKI/USDT:USDT", "OCEAN/USDT:USDT", "ZIL/USDT:USDT", "IOTA/USDT:USDT", "EDU/USDT:USDT", "FLM/USDT:USDT", "STMX/USDT:USDT", "CELR/USDT:USDT", "NEAR/USDT:USDT", "GMX/USDT:USDT", "1INCH/USDT:USDT", "ALICE/USDT:USDT", "XRP/USDT:USDT", "MAGIC/USDT:USDT", "ICX/USDT:USDT", "LIT/USDT:USDT", "BNX/USDT:USDT", "ETH/USDT:USDT", "1000LUNC/USDT:USDT", "CHR/USDT:USDT", "NKN/USDT:USDT"]

py"""
import time
import ccxt
bybit = ccxt.bybit({
            'options': {'defaultType': 'future',},
            "timeout": 30000,
            "enableRateLimit": False,
        })

ticker_list = ['TRX/USDT:USDT', 'BAKE/USDT:USDT', 'SOL/USDT:USDT', 'SPELL/USDT:USDT', 'RAD/USDT:USDT', 'SSV/USDT:USDT', 'AR/USDT:USDT', 'ARB/USDT:USDT', 'LRC/USDT:USDT', 'DOGE/USDT:USDT', 'NEO/USDT:USDT', 'GALA/USDT:USDT', 'SUI/USDT:USDT', 'MANA/USDT:USDT', 'LTC/USDT:USDT', 'LEVER/USDT:USDT', 'BLUR/USDT:USDT', 'COMP/USDT:USDT', 'VET/USDT:USDT', 'LUNA2/USDT:USDT', 'CTK/USDT:USDT', 'MASK/USDT:USDT', 'PEOPLE/USDT:USDT', 'TRU/USDT:USDT', 'DAR/USDT:USDT', 'C98/USDT:USDT', 'ENS/USDT:USDT', 'AAVE/USDT:USDT', 'COMBO/USDT:USDT', 'CKB/USDT:USDT', 'KSM/USDT:USDT', 'ALPHA/USDT:USDT', 'CRV/USDT:USDT', 'LDO/USDT:USDT', 'SKL/USDT:USDT', 'HFT/USDT:USDT', 'OP/USDT:USDT', 'DGB/USDT:USDT', 'QNT/USDT:USDT', 'ADA/USDT:USDT', 'HOT/USDT:USDT', 'IOST/USDT:USDT', 'IOTX/USDT:USDT', 'CTSI/USDT:USDT', 'ACH/USDT:USDT', 'UMA/USDT:USDT', 'MATIC/USDT:USDT', 'PERP/USDT:USDT', 'THETA/USDT:USDT', 'STORJ/USDT:USDT', 'SAND/USDT:USDT', 'JOE/USDT:USDT', 'HBAR/USDT:USDT', 'BNB/USDT:USDT', 'INJ/USDT:USDT', 'ZRX/USDT:USDT', 'DASH/USDT:USDT', 'REEF/USDT:USDT', 'GAL/USDT:USDT', 'AMB/USDT:USDT', 'FET/USDT:USDT', 'FLOW/USDT:USDT', 'WAVES/USDT:USDT', 'RVN/USDT:USDT', 'CFX/USDT:USDT', 'SXP/USDT:USDT', 'EGLD/USDT:USDT', 'API3/USDT:USDT', 'ROSE/USDT:USDT', 'EOS/USDT:USDT', 'XTZ/USDT:USDT', 'AVAX/USDT:USDT', 'ICP/USDT:USDT', 'SNX/USDT:USDT', 'REN/USDT:USDT', 'XLM/USDT:USDT', '1000PEPE/USDT:USDT', 'FTM/USDT:USDT', 'WOO/USDT:USDT', 'KAVA/USDT:USDT', 'ZEN/USDT:USDT', 'AUDIO/USDT:USDT', 'ID/USDT:USDT', 'ONE/USDT:USDT', 'OGN/USDT:USDT', 'ARPA/USDT:USDT', 'RDNT/USDT:USDT', 'BCH/USDT:USDT', 'CHZ/USDT:USDT', 'MKR/USDT:USDT', 'KLAY/USDT:USDT', 'KEY/USDT:USDT', 'UNI/USDT:USDT', 'HOOK/USDT:USDT', 'CELO/USDT:USDT', 'ETC/USDT:USDT', 'STG/USDT:USDT', 'LINA/USDT:USDT', 'ONT/USDT:USDT', 'ATOM/USDT:USDT', 'ASTR/USDT:USDT', 'BAT/USDT:USDT', 'QTUM/USDT:USDT', 'SFP/USDT:USDT', 'ATA/USDT:USDT', 'MINA/USDT:USDT', 'SUSHI/USDT:USDT', 'RUNE/USDT:USDT', 'RSR/USDT:USDT', 'ZEC/USDT:USDT', 'TLM/USDT:USDT', 'RLC/USDT:USDT', 'FXS/USDT:USDT', 'APT/USDT:USDT', 'ANT/USDT:USDT', 'BLZ/USDT:USDT', 'DENT/USDT:USDT', 'XEM/USDT:USDT', 'BAL/USDT:USDT', 'MTL/USDT:USDT', 'HIGH/USDT:USDT', 'DUSK/USDT:USDT', 'JASMY/USDT:USDT', 'GTC/USDT:USDT', 'XVS/USDT:USDT', 'ANKR/USDT:USDT', 'PHB/USDT:USDT', 'COTI/USDT:USDT', 'XMR/USDT:USDT', 'DOT/USDT:USDT', 'KNC/USDT:USDT', 'OMG/USDT:USDT', 'GMT/USDT:USDT', 'UNFI/USDT:USDT', 'AGIX/USDT:USDT', 'TRB/USDT:USDT', 'GRT/USDT:USDT', 'BEL/USDT:USDT', 'ENJ/USDT:USDT', 'AXS/USDT:USDT', 'FIL/USDT:USDT', 'ALGO/USDT:USDT', 'DYDX/USDT:USDT', 'CVX/USDT:USDT', 'LPT/USDT:USDT', 'STX/USDT:USDT', 'T/USDT:USDT', 'RNDR/USDT:USDT', 'APE/USDT:USDT', 'IDEX/USDT:USDT', 'BAND/USDT:USDT', '1000XEC/USDT:USDT', 'IMX/USDT:USDT', 'LQTY/USDT:USDT', 'LINK/USDT:USDT', '1000FLOKI/USDT:USDT', 'OCEAN/USDT:USDT', 'ZIL/USDT:USDT', 'IOTA/USDT:USDT', 'EDU/USDT:USDT', 'FLM/USDT:USDT', 'STMX/USDT:USDT', 'CELR/USDT:USDT', 'NEAR/USDT:USDT', 'GMX/USDT:USDT', '1INCH/USDT:USDT', 'ALICE/USDT:USDT', 'XRP/USDT:USDT', 'MAGIC/USDT:USDT', 'ICX/USDT:USDT', 'LIT/USDT:USDT', 'BNX/USDT:USDT', 'ETH/USDT:USDT', '1000LUNC/USDT:USDT', 'CHR/USDT:USDT', 'NKN/USDT:USDT']

temp_ = time.time()
result = []
result_ticker = []
for ticker in ticker_list:
    try:
        result.append(bybit.fetch_ohlcv(ticker))
        result_ticker.append(ticker)
    except:
        continue


print(len(bybit.fetch_ohlcv("BTCUSDT", "1m", limit = 4)))

"""

